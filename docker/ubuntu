# Build stage with Spack pre-installed and ready to be used
FROM spack/ubuntu-jammy:develop

# Get Ubuntu packages
# 1. apt-get install necessary build tools
# 2. apt-get install dependencies for spack to build correctly
RUN apt-get update \
&& apt-get upgrade -y \
&& apt-get install -y \
    python3-dev \
    python-is-python3 \
    build-essential \
    cmake \
    vim \
    emacs \
    wget \
    libgl1 \
&& apt-get install -y \
    libssl-dev \
    libopenmpi-dev \
    libscotch-dev \
    flex \
&& apt-get clean \
&& rm -rf /var/lib/apt/lists/*

# Get Myna
ENV MYNA_DIR=/opt/myna
RUN MYNA_VERSION=main.tar.gz && \
    MYNA_ARCHIVE=myna-${MYNA_VERSION} && \
    MYNA_URL=https://github.com/ORNL-MDF/Myna/archive/refs/heads/${MYNA_VERSION} && \
    wget --quiet ${MYNA_URL} --output-document=${MYNA_ARCHIVE} && \
    mkdir -p ${MYNA_DIR} && \
    tar -xf ${MYNA_ARCHIVE} -C ${MYNA_DIR} --strip-components=1 && \
    rm -f ${MYNA_ARCHIVE} && \
    python3 -m pip install --upgrade pip && \
    python3 -m pip install ${MYNA_DIR} --root-user-action=ignore && \
    python3 -m pip cache purge
ENV PYTHONPATH=${PYTHONPATH}:${MYNA_DIR}

# What we want to install and how we want to install it
# is specified in a manifest file (spack.yaml)
RUN mkdir -p /opt/spack-environment && \
set -o noclobber \
&&  (echo spack: \
&&   echo '  specs:' \
&&   echo '  - exaca@master' \
&&   echo '  - additivefoam@main' \
&&   echo '  concretizer:' \
&&   echo '    unify: true' \
&&   echo '  config:' \
&&   echo '    install_tree: /opt/software' \
&&   echo '  view: /opt/views/view') > /opt/spack-environment/spack.yaml

# Find apt-get packages, then build the spack environment
# NOTE: doesn't look like it is finding the system openmpi
RUN cd /opt/spack-environment \
&& spack env activate . \
&& spack external find \
&& spack compiler find \
&& spack install --fail-fast \
&& find -L /opt/views/view/* -type f -exec readlink -f '{}' \; | \
    xargs file -i | \
    grep 'charset=binary' | \
    grep 'x-executable\|x-archive\|x-sharedlib' | \
    awk -F: '{print $1}' | xargs strip \
&& spack gc -y

# Modifications to the environment that are necessary to run
RUN cd /opt/spack-environment && \
    spack env activate --sh -d . > activate.sh

# Install 3DThesis
ENV THESIS_DIR=/opt/3DThesis
RUN . /opt/spack-environment/activate.sh && \
    THESIS_VERSION=master.tar.gz && \
    THESIS_ARCHIVE=3DThesis-${THESIS_VERSION} && \
    THESIS_URL=https://github.com/ORNL-MDF/3DThesis/archive/refs/heads/${THESIS_VERSION} && \
    wget --quiet ${THESIS_URL} --output-document=${THESIS_ARCHIVE} && \
    mkdir -p 3dthesis && \
    tar -xf ${THESIS_ARCHIVE} -C 3dthesis --strip-components=1 && \
    rm -f ${THESIS_ARCHIVE} && \
    cd 3dthesis && \
    cmake -B build \
      -D CMAKE_INSTALL_PREFIX=${THESIS_DIR} \
      -D CMAKE_BUILD_TYPE=Debug && \
    cmake --build build && \
    cmake --install build
RUN echo 'export PATH="/opt/3DThesis/bin:$PATH"' >> activate.sh

# Set entry point
RUN { \
      echo '#!/bin/sh' \
      && echo '.' /opt/spack-environment/activate.sh \
      && echo 'exec "$@"'; \
    } > /entrypoint.sh \
&& chmod a+x /entrypoint.sh \
&& ln -s /opt/views/view /opt/view

ENTRYPOINT [ "/entrypoint.sh" ]
CMD [ "/bin/bash" ]